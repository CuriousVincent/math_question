// Mocks generated by Mockito 5.0.16 from annotations
// in math_question/test/bloc/question_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:math_question/api/question_service.dart' as _i2;
import 'package:math_question/models/get_questions_resp.dart' as _i3;
import 'package:math_question/models/question_repo.dart' as _i5;
import 'package:math_question/models/summit_question_resp.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeQuestionService_0 extends _i1.Fake implements _i2.QuestionService {}

class _FakeGetQuestionsResp_1 extends _i1.Fake implements _i3.GetQuestionsResp {
}

class _FakeSummitQuestionResp_2 extends _i1.Fake
    implements _i4.SummitQuestionResp {}

/// A class which mocks [QuestionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionRepository extends _i1.Mock
    implements _i5.QuestionRepository {
  MockQuestionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QuestionService get questionService =>
      (super.noSuchMethod(Invocation.getter(#questionService),
          returnValue: _FakeQuestionService_0()) as _i2.QuestionService);
  @override
  _i6.Future<_i3.GetQuestionsResp> getQuestions() =>
      (super.noSuchMethod(Invocation.method(#getQuestions, []),
              returnValue:
                  Future<_i3.GetQuestionsResp>.value(_FakeGetQuestionsResp_1()))
          as _i6.Future<_i3.GetQuestionsResp>);
  @override
  _i6.Future<_i4.SummitQuestionResp> summitQuestions() => (super.noSuchMethod(
          Invocation.method(#summitQuestions, []),
          returnValue:
              Future<_i4.SummitQuestionResp>.value(_FakeSummitQuestionResp_2()))
      as _i6.Future<_i4.SummitQuestionResp>);
  @override
  int checkCorrectAnswerNumber(
          List<String>? ans, _i4.SummitQuestionResp? resp) =>
      (super.noSuchMethod(
          Invocation.method(#checkCorrectAnswerNumber, [ans, resp]),
          returnValue: 0) as int);
  @override
  String toString() => super.toString();
}
